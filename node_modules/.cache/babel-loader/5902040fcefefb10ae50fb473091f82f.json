{"ast":null,"code":"import _objectSpread from\"/Users/oladayoogundipe/Showwcase-React-Challenge/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ADD_SCHOOL,DELETE_SCHOOL}from'./../state/types';var initialState={schools:[]};export var schoolReducer=function schoolReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD_SCHOOL:var arr=state.schools;//move newly created school bio to the top of the array\narr.unshift(action.payload);return _objectSpread(_objectSpread({},state),{},{schools:arr});case DELETE_SCHOOL:var arr1=state.schools;//find the index of selected array to delete and delete it      \nvar m=arr1.indexOf(action.payload);arr1.splice(m,1);return _objectSpread(_objectSpread({},state),{},{schools:arr1});default:return state;}};","map":{"version":3,"sources":["/Users/oladayoogundipe/Showwcase-React-Challenge/src/components/reducers/schools.ts"],"names":["ADD_SCHOOL","DELETE_SCHOOL","initialState","schools","schoolReducer","state","action","type","arr","unshift","payload","arr1","m","indexOf","splice"],"mappings":"kIACA,OAAQA,UAAR,CAAmBC,aAAnB,KAAyD,kBAAzD,CAkBA,GAAMC,CAAAA,YAAY,CAAC,CACjBC,OAAO,CAAC,EADS,CAAnB,CAKA,MAAO,IAAMC,CAAAA,aAAa,CAAC,QAAdA,CAAAA,aAAc,EAA0E,IAAzEC,CAAAA,KAAyE,2DAAzCH,YAAyC,IAA3BI,CAAAA,MAA2B,2CAGnG,OAAQA,MAAM,CAACC,IAAf,EAEE,IAAKP,CAAAA,UAAL,CACE,GAAIQ,CAAAA,GAAG,CAAGH,KAAK,CAACF,OAAhB,CACA;AACAK,GAAG,CAACC,OAAJ,CAAYH,MAAM,CAACI,OAAnB,EAEA,sCAAYL,KAAZ,MAAmBF,OAAO,CAAEK,GAA5B,GACF,IAAKP,CAAAA,aAAL,CACE,GAAIU,CAAAA,IAAI,CAAGN,KAAK,CAACF,OAAjB,CACA;AACA,GAAIS,CAAAA,CAAC,CAAGD,IAAI,CAACE,OAAL,CAAaP,MAAM,CAACI,OAApB,CAAR,CACMC,IAAI,CAACG,MAAL,CAAYF,CAAZ,CAAe,CAAf,EAEA,sCAAYP,KAAZ,MAAmBF,OAAO,CAAEQ,IAA5B,GAGR,QACI,MAAON,CAAAA,KAAP,CAlBN,CAsBD,CAzBM","sourcesContent":["\nimport {ADD_SCHOOL,DELETE_SCHOOL,SchoolActionTypes} from './../state/types'\n\nexport interface SchoolState{\n  schools:SchoolType[],\n}\ntype SchoolType={\n  name: string,\n  degree:string,\n  studyField:string,\n  yearStarted: number,\n  yearEnded:number,\n  GPA:number,\n  desc:string\n\n\n\n}\n\nconst initialState={\n  schools:[]\n}\n\n\nexport const schoolReducer=(state:SchoolState | undefined = initialState, action:SchoolActionTypes)=>{\n  \n  \n  switch (action.type) { \n    \n    case ADD_SCHOOL:\n      let arr = state.schools as any\n      //move newly created school bio to the top of the array\n      arr.unshift(action.payload)\n\n      return { ...state, schools: arr }    \n    case DELETE_SCHOOL:\n      let arr1 = state.schools as any\n      //find the index of selected array to delete and delete it      \n      let m = arr1.indexOf(action.payload)\n            arr1.splice(m, 1)\n    \n            return { ...state, schools: arr1 }\n   \n\n    default:\n        return state;\n      }\n    \n\n}"]},"metadata":{},"sourceType":"module"}