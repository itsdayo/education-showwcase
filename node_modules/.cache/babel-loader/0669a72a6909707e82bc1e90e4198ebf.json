{"ast":null,"code":"import { ADD_SCHOOL, DELETE_SCHOOL } from './../state/types';\nconst initialState = {\n  schools: []\n};\nexport const schoolReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_SCHOOL:\n      let arr = state.schools; //move newly created school bio to the top of the array\n\n      arr.unshift(action.payload);\n      return { ...state,\n        schools: arr\n      };\n\n    case DELETE_SCHOOL:\n      let arr1 = state.schools; //find the index of selected array to delete and delete it      \n\n      let m = arr1.indexOf(action.payload);\n      arr1.splice(m, 1);\n      return { ...state,\n        schools: arr1\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/oladayoogundipe/Showwcase-React-Challenge/src/components/reducers/schools.ts"],"names":["ADD_SCHOOL","DELETE_SCHOOL","initialState","schools","schoolReducer","state","action","type","arr","unshift","payload","arr1","m","indexOf","splice"],"mappings":"AACA,SAAQA,UAAR,EAAmBC,aAAnB,QAAyD,kBAAzD;AAkBA,MAAMC,YAAY,GAAC;AACjBC,EAAAA,OAAO,EAAC;AADS,CAAnB;AAKA,OAAO,MAAMC,aAAa,GAAC,CAACC,KAA6B,GAAGH,YAAjC,EAA+CI,MAA/C,KAA0E;AAGnG,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,UAAL;AACE,UAAIQ,GAAG,GAAGH,KAAK,CAACF,OAAhB,CADF,CAEE;;AACAK,MAAAA,GAAG,CAACC,OAAJ,CAAYH,MAAM,CAACI,OAAnB;AAEA,aAAO,EAAE,GAAGL,KAAL;AAAYF,QAAAA,OAAO,EAAEK;AAArB,OAAP;;AACF,SAAKP,aAAL;AACE,UAAIU,IAAI,GAAGN,KAAK,CAACF,OAAjB,CADF,CAEE;;AACA,UAAIS,CAAC,GAAGD,IAAI,CAACE,OAAL,CAAaP,MAAM,CAACI,OAApB,CAAR;AACMC,MAAAA,IAAI,CAACG,MAAL,CAAYF,CAAZ,EAAe,CAAf;AAEA,aAAO,EAAE,GAAGP,KAAL;AAAYF,QAAAA,OAAO,EAAEQ;AAArB,OAAP;;AAGR;AACI,aAAON,KAAP;AAlBN;AAsBD,CAzBM","sourcesContent":["\nimport {ADD_SCHOOL,DELETE_SCHOOL,SchoolActionTypes} from './../state/types'\n\nexport interface SchoolState{\n  schools:SchoolType[],\n}\ntype SchoolType={\n  name: string,\n  degree:string,\n  studyField:string,\n  yearStarted: number,\n  yearEnded:number,\n  GPA:number,\n  desc:string\n\n\n\n}\n\nconst initialState={\n  schools:[]\n}\n\n\nexport const schoolReducer=(state:SchoolState | undefined = initialState, action:SchoolActionTypes)=>{\n  \n  \n  switch (action.type) { \n    \n    case ADD_SCHOOL:\n      let arr = state.schools as any\n      //move newly created school bio to the top of the array\n      arr.unshift(action.payload)\n\n      return { ...state, schools: arr }    \n    case DELETE_SCHOOL:\n      let arr1 = state.schools as any\n      //find the index of selected array to delete and delete it      \n      let m = arr1.indexOf(action.payload)\n            arr1.splice(m, 1)\n    \n            return { ...state, schools: arr1 }\n   \n\n    default:\n        return state;\n      }\n    \n\n}"]},"metadata":{},"sourceType":"module"}