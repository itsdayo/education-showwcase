{"version":3,"sources":["components/WelcomePage.tsx","components/state/types.ts","components/AutoComplete.tsx","components/HomePage.tsx","components/actions/index.ts","components/reducers/schools.ts","components/reducers/index.ts","components/state/store.ts","components/Router.tsx","reportWebVitals.ts","index.tsx"],"names":["WelcomePage","history","useState","name","setName","Main","styled","div","Form","form","Input","input","Button","button","className","onSubmit","event","push","pathname","state","preventDefault","autoFocus","value","onChange","e","target","type","ADD_SCHOOL","DELETE_SCHOOL","AutoComplete","optionList","options","schoolSelectorChange","activeOption","setActiveOption","filteredOptions","setFilteredOptions","showOptions","setShowOptions","userInput","setUserInput","onClick","currentTarget","innerText","Options","length","style","overflow","map","optionName","index","marginTop","Fragment","placeholder","console","log","arry","filter","toLowerCase","indexOf","onKeyDown","keyCode","HomePage","location","React","modalIsOpen","setIsOpen","schoolOptionsList","setSchoolsOptionsList","setError","schoolName","setSchoolName","useEffect","fetch","then","res","json","result","schoolNameArray","i","error","schools","useSelector","dispatch","useDispatch","Title","h4","FullBio","SchoolList","ModalContent","SaveInfoButton","DeleteButton","SchoolName","Degree","StartYear","EndYear","GPA","Description","closeModal","typedSchool","deleteSchoolFromList","school","payload","isOpen","onRequestClose","content","top","left","right","bottom","marginRight","transform","width","contentLabel","marginLeft","enableReinitialize","initialValues","schoolArray","render","formikProps","flexDirection","position","paddingLeft","step","rows","maxLength","component","schoolReducer","item","whiteSpace","fontSize","fontWeight","paddingBottom","background","studyField","degree","yearStarted","yearEnded","desc","initialState","rootReducer","combineReducers","action","arr","unshift","arr1","m","splice","store","createStore","Router","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b99b434.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react';\n\n\nimport styled from 'styled-components'\nimport {RouteComponentProps} from 'react-router-dom'\ninterface Props extends RouteComponentProps {}\n\n\nconst WelcomePage: React.FC<Props>=({history})=> {\n\n  \nconst [name, setName] = useState(\"\");\nconst Main = styled.div`\n\nmargin-top:15%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction:column;\n\n.greeting{\n    font-weight:bold;\n}\n.instruction{\n    font-weight:bold;\n    margin-top:70px;\n}\n`;\n\nconst Form =styled.form`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction:column;\nmargin-top:10px;\n\n\n`;\nconst Input = styled.input`\n\nmargin-top:5px;\nwidth:350px;\nheight:25px;\nbox-shadow:0px 3px lightgray;\n`;\nconst Button = styled.button`\n  background: lightgray;\n  margin-top:5px;\n  height:40px;\n  width:90px;\n  font-size:20px;\n  \n  \n`;\nconst handleSubmit=(event:any)=>{\n  //navigate to the about page with the name entered \n  history.push({\n    pathname:'/about',\n    state:{name:name}\n})\nevent.preventDefault();\n}\n  return (\n   <Main>\n<div className='greeting'>Hi there! Welcome to your education showcase.</div>\n<div className='instruction'>Type your name and click \"Enter\" below to begin!</div>\n<Form onSubmit={handleSubmit}>\n    <Input autoFocus value={name} onChange={(e)=>setName(e.target.value)} type=\"text\"/>\n<br/>\n<Button type='submit'>Enter</Button>\n</Form>\n   </Main>\n  );\n}\n\n\nexport default WelcomePage;","export const ADD_SCHOOL = 'ADD_SCHOOL'\nexport const DELETE_SCHOOL = 'DELETE_SCHOOL'\n\ninterface AddSchoolAction {\n  type: typeof ADD_SCHOOL\n  payload: string\n}\n\ninterface DeleteSchoolAction {\n  type: typeof DELETE_SCHOOL\n  payload: string\n}\nexport type SchoolActionTypes = AddSchoolAction | DeleteSchoolAction","import React,{useState, useEffect} from 'react';\n\nimport { Formik, Field, Form, } from \"formik\";\nimport styled from 'styled-components'\ninterface Props  {\n    options:string[];\n    schoolSelectorChange:any;\n}\n\n\nconst AutoComplete: React.FC<Props>=({options,schoolSelectorChange})=> {\n\n  \nconst [activeOption, setActiveOption] = useState(0);\nconst [filteredOptions, setFilteredOptions] = useState([]);\nconst [showOptions, setShowOptions]=useState(false)\nconst [userInput, setUserInput]=useState(\"\")\n\n const onChange = (e: { currentTarget: { value: any; }; }) => {\n    console.log('onChanges');\n\n    \n    const userInput = e.currentTarget.value;\n    //find the school that matches the user input\n    const filteredOptions = options.filter(\n      (optionName) =>\n        optionName.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n\n    );\n\n    let arry= filteredOptions as any\n\n    setActiveOption(0)\n    setFilteredOptions(arry)\n    setShowOptions(true)\n    setUserInput(e.currentTarget.value)\n    \n  };\n const onClick = (e: { currentTarget: { innerText: React.SetStateAction<string>; }; }) => {\n    setActiveOption(0)\n    setFilteredOptions([])\n    setShowOptions(false)\n    setUserInput(e.currentTarget.innerText)\n    schoolSelectorChange(e.currentTarget.innerText)\n      \n   \n  };\n\n const onKeyDown = (e: { keyCode: number; }) => {\n    \n\n    if (e.keyCode === 13) {\n        setActiveOption(0)\n        setShowOptions(false)\n        setUserInput(filteredOptions[activeOption])\n      \n    } else if (e.keyCode === 38) {\n      if (activeOption === 0) {\n        return;\n      }\n      setActiveOption(activeOption-1)\n      \n    } else if (e.keyCode === 40) {\n      if (activeOption === filteredOptions.length - 1) {\n        console.log(activeOption);\n        return;\n      }\n      setActiveOption(activeOption+1)\n\n      schoolSelectorChange(userInput)\n      \n      \n    }\n  };\n\n  const Options = styled.div`\n border-width:5px;\n border-color:black;\n max-height: 150px;\n width:200px;\n overflow: scroll;\n \n .options{\n    border-width:5px;\n border-color:black;  \n }\n\n`;\n\nlet optionList\nif(showOptions && userInput){\n    if (filteredOptions.length) {\n        optionList = (\n         \n         <Options>\n             <div style={{overflow:'scroll'}}>\n            {filteredOptions.map((optionName, index) => {\n              let className;\n              if (index === activeOption) {\n                className = 'option-active';\n              }\n              return (\n                <div  style={{marginTop:10}}className=\"options\" key={optionName} onClick={onClick}>\n                  {optionName}\n                </div>\n              );\n            })}\n            </div>\n          </Options>\n        );\n      } else {\n        optionList = (\n          <div className=\"no-options\">\n            <em>No Option!</em>\n          </div>\n        );\n      } \n}\n\n\n  return (\n    <React.Fragment>\n    <div className=\"search\">\n      <Field\n        type=\"text\"\n        name=\"name\"\n        className=\"search-box\"\n        placeholder=\"Enter the school name\"\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        value={userInput}\n      />\n      </div>\n   \n    {optionList}\n  </React.Fragment>\n  \n  );\n}\n\n\nexport default AutoComplete;","import React, { useState, useEffect } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Location } from \"history\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addSchool } from \"./actions\";\nimport Modal from \"react-modal\";\nimport { Formik, Field, Form } from \"formik\";\nimport AutoComplete from \"./AutoComplete\";\nimport { deleteSchool } from \"./actions\";\n\ntype StateType = {\n  name: string;\n};\ntype LocationProps = Location<StateType>;\n\ninterface Props {\n  location: LocationProps;\n  options: {};\n}\nconst HomePage: React.FC<Props> = ({ location, options }) => {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [schoolOptionsList, setSchoolsOptionsList] = React.useState([]);\n  const [error, setError] = useState(null);\n  const [schoolName, setSchoolName] = React.useState([]);\n  useEffect(() => {\n    // retrieving data from the university api\n    fetch(\"http://universities.hipolabs.com/search?\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          // push the name of the university to an empty array\n          let schoolNameArray = [] as any;\n          for (let i = 0; i <= result.length - 1; i++) {\n            schoolNameArray.push(result[i].name);\n          }\n          setSchoolsOptionsList(schoolNameArray);\n          \n        },\n\n        (error) => {\n          setError(error);\n        }\n      );\n  }, []);\n\n  const schools: any = useSelector((state) => state);\n\n  const dispatch = useDispatch();\n  \n  const Main = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: row;\n  `;\n  const Title = styled.h4`\n    margin-top: -320px;\n    margin-left: 300px;\n\n    position: absolute;\n    align-self: \"center\";\n  `;\n\n  const FullBio = styled.div`\n    position: absolute;\n    width: 830px;\n    background: lightgray;\n    margin-left: 340px;\n    margin-top: 200px;\n    max-height: 310px;\n  `;\n\n  const SchoolList = styled.div`\n    background: lightgray;\n\n    margin-right: 850px;\n    margin-top: 10%;\n    width: 230px;\n    position: \"absolute\";\n    min-height: 370px;\n    max-height: 370pv;\n    padding-top: 10px;\n    padding-bottom: 10px;\n\n    .school-list {\n      font-size: 17px;\n      justify-content: \"colunm\";\n      padding-top: 30;\n      margin: 0 auto;\n      width: 50%;\n    }\n  `;\n\n  const Button = styled.button`\n    background: lightgray;\n\n    height: 40px;\n    width: 170px;\n    font-size: 15px;\n    position: absolute;\n    margin-top: -230px;\n    margin-left: 300px;\n    padding-bottom: 5;\n  `;\n  const ModalContent = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: \"column\";\n  `;\n  const SaveInfoButton = styled.button`\n    background: lightgray;\n\n    height: 30px;\n    width: 70px;\n    font-size: 15px;\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n  `;\n\n  const DeleteButton = styled.button`\n    background: red;\n\n    height: 30px;\n    width: 70px;\n    font-size: 15px;\n    position: relative;\n    left: 75%;\n  `;\n  const SchoolName = styled.div`\n    font-size: 30px;\n    font-weight: \"bold\";\n  `;\n\n  const Degree = styled.div`\n    font-size: 20px;\n    margin-top: 7px;\n  `;\n  const StartYear = styled.div`\n    font-size: 20px;\n  `;\n  const EndYear = styled.div`\n    position: \"absolute\";\n    margin-left: 15%;\n    margin-top: -24px;\n    font-size: 20px;\n  `;\n  const GPA = styled.div`\n    font-size: 20px;\n    margin-top: 7px;\n  `;\n  const Description = styled.div`\n    margin-top: 7px;\n  `;\n\n  function addingSchool() {\n    setIsOpen(true);\n  }\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const customStyles = {\n    content: {\n      top: \"40%\",\n      left: \"62%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: 370,\n    },\n  };\n  function modalSaveInfo(school: any) {\n    let schoolArray = school;\n    setIsOpen(false);\n    //set the selected school name value to the name key to be pass to global state \n    schoolArray.name = schoolName;\n    \n    dispatch(addSchool(school));\n  }\n  function schoolSelectorChange(name: any, typedSchool: any) {\n    \n    //push the selected university from the AutoComplete component to state\n    setSchoolName(name);\n   \n  }\n\n  function deleteSchoolFromList(school: any) {\n    dispatch(deleteSchool(school));\n  }\n\n  return (\n    <React.Fragment>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Education Modal\"\n      >\n        <button onClick={closeModal}>X</button>\n        <span style={{ marginLeft: 5 }}>Education Information</span>\n        <ModalContent>\n          <Formik\n            enableReinitialize\n            initialValues={{}}\n            onSubmit={modalSaveInfo}\n            render={(formikProps: any) => (\n              <Form>\n                <div style={{ flexDirection: \"row\" }}>\n                  <div>\n                    <label className=\"form-label\">School Name</label>\n                    <br />\n                    <div className=\"App\">\n                      <AutoComplete\n                        options={schoolOptionsList}\n                        schoolSelectorChange={schoolSelectorChange}\n                      />\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      position: \"relative\",\n                      paddingLeft: 30,\n                      marginLeft: \"50%\",\n                      marginTop: -39,\n                    }}\n                  >\n                    <label className=\"form-label\">Degree</label>\n                    <Field\n                      name=\"degree\"\n                      type=\"text\"\n                      placeholder=\"Enter degree recieved\"\n                    />\n                  </div>\n                </div>\n\n                <div style={{ marginTop: 25, position: \"relative\" }}>\n                  <label className=\"form-label\">Field of Study</label>\n                  <br />\n                  <Field\n                    name=\"studyField\"\n                    type=\"text\"\n                    placeholder=\"Enter the field of study\"\n                  />\n                </div>\n\n                <div style={{ flexDirection: \"row\", marginTop: 25 }}>\n                  <label>Year Started</label>\n                  <br />\n                  <Field\n                    name=\"yearStarted\"\n                    type=\"number\"\n                    placeholder=\"Ex. 1999\"\n                  />{\" \"}\n                  <div\n                    style={{\n                      position: \"relative\",\n                      paddingLeft: 30,\n                      marginLeft: \"50%\",\n                      marginTop: -55,\n                    }}\n                  >\n                    <label>Year Ended(Or Expected)</label>\n                    <Field\n                      name=\"yearEnded\"\n                      type=\"number\"\n                      placeholder=\"Ex. 1999\"\n                    />\n                  </div>\n                </div>\n                <div style={{ marginTop: 25 }}>\n                  <label className=\"form-label\">GPA</label>\n                  <br />\n                  <Field\n                    name=\"GPA\"\n                    step=\"0.01\"\n                    type=\"number\"\n                    placeholder=\"Enter your GPA\"\n                  />\n                </div>\n                <div style={{ marginTop: 25 }}>\n                  <label className=\"form-label\">Description</label>\n                  <br />\n                  <Field\n                    name=\"desc\"\n                    rows=\"3\"\n                    maxLength=\"500\"\n                    component=\"textarea\"\n                    placeholder=\"Enter a description\"\n                  />\n                </div>\n\n                <SaveInfoButton type=\"submit\">Save</SaveInfoButton>\n              </Form>\n            )}\n          />\n        </ModalContent>\n      </Modal>\n\n      <Main>\n        <SchoolList>\n          {\" \"}\n          <div className=\"school-list\">\n            {\" \"}\n            {schools.schoolReducer.schools.map((item: any, index: any) => (\n              <p\n                style={{\n                  whiteSpace: \"initial\",\n                  width: 1,\n                  marginTop: 10,\n                  fontSize: 15,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {item.name}\n              </p>\n            ))}{\" \"}\n          </div>\n        </SchoolList>\n\n        <Title>Welcome to {location.state.name}'s education page </Title>\n        <Button onClick={addingSchool}>Add new education</Button>\n        <br />\n\n        <FullBio>\n          <div\n            style={{\n              marginTop: 15,\n              paddingBottom: 20,\n              background: \"lightgray\",\n              paddingLeft: \"10%\",\n            }}\n          >\n            {schools.schoolReducer.schools.map((item: any, index: any) => (\n              <div>\n                <SchoolName>\n                  Graduate of {item.studyField} at {item.name}\n                </SchoolName>\n                <Degree>{item.degree}</Degree>\n                <div style={{ marginTop: 7 }}>\n                  <StartYear>From-{item.yearStarted}</StartYear>\n                  <EndYear>To-{item.yearEnded}</EndYear>\n                </div>\n\n                <GPA>GPA-{item.GPA}</GPA>\n                <Description>{item.desc}</Description>\n                <DeleteButton onClick={(item) => deleteSchoolFromList(item)}>\n                  Delete\n                </DeleteButton>\n              </div>\n            ))}\n          </div>\n        </FullBio>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default HomePage;\n","\nimport {ADD_SCHOOL,DELETE_SCHOOL, SchoolActionTypes } from './../state/types'\n\nexport const addSchool = (data:any):SchoolActionTypes => ({\n  type: ADD_SCHOOL,\n  payload: data\n})\n\nexport const deleteSchool = (data:any):SchoolActionTypes => ({\n  type: DELETE_SCHOOL,\n  payload: data\n})\n","\nimport {ADD_SCHOOL,DELETE_SCHOOL,SchoolActionTypes} from './../state/types'\n\nexport interface SchoolState{\n  schools:SchoolType[],\n}\ntype SchoolType={\n  name: string,\n  degree:string,\n  studyField:string,\n  yearStarted: number,\n  yearEnded:number,\n  GPA:number,\n  desc:string\n\n\n\n}\n\nconst initialState={\n  schools:[]\n}\n\n\nexport const schoolReducer=(state:SchoolState | undefined = initialState, action:SchoolActionTypes)=>{\n  \n  \n  switch (action.type) { \n    \n    case ADD_SCHOOL:\n      let arr = state.schools as any\n      //move newly created school bio to the top of the array\n      arr.unshift(action.payload)\n\n      return { ...state, schools: arr }    \n    case DELETE_SCHOOL:\n      let arr1 = state.schools as any\n      //find the index of selected array to delete and delete it      \n      let m = arr1.indexOf(action.payload)\n            arr1.splice(m, 1)\n    \n            return { ...state, schools: arr1 }\n   \n\n    default:\n        return state;\n      }\n    \n\n}","import { combineReducers } from 'redux';\nimport {schoolReducer} from './schools'\n// Combine all the reducers\nconst rootReducer = combineReducers({\n  schoolReducer\n\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux'\nimport rootReducer from \"./../reducers\"\n\nexport const store = createStore(rootReducer)","\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport WelcomePage from './WelcomePage'\nimport HomePage from './HomePage'\nimport {Provider} from 'react-redux';\nimport {store} from './../components/state/store'\nconst Router = () => (\n    <Provider store={store}>\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={WelcomePage} />\n      <Route exact path=\"/about\" component={HomePage} /> \n    </Switch>\n  </BrowserRouter>\n  </Provider>\n);\n\nexport default Router;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Router from './components/Router'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}